<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Oh My Heart // A Blog by Alex Ezell</title><link href="http://aezell.github.com/" rel="alternate"></link><link href="http://aezell.github.com/feeds/all-en.atom.xml" rel="self"></link><id>http://aezell.github.com/</id><updated>2012-10-22T00:00:00-05:00</updated><entry><title>Handling time nicely with moment.js</title><link href="http://aezell.github.com//2012/10/22/javascript-momentjs/" rel="alternate"></link><updated>2012-10-22T00:00:00-05:00</updated><author><name>Alex Ezell</name></author><id>tag:aezell.github.com,2012-10-22:/2012/10/22/javascript-momentjs/</id><summary type="html">&lt;p&gt;As every developer knows, handling timezones and the like is a real &lt;span class="caps"&gt;PITA&lt;/span&gt;. The best minds of our generation have dashed themselves against the jagged rocks of Daylight Savings Time and that part of Indiana that&amp;#8217;s always 30 minutes behind the rest of&amp;nbsp;Indiana.&lt;/p&gt;
&lt;p&gt;While that detail isn&amp;#8217;t necessarily solved by &lt;a href="http://momentjs.com"&gt;moment.js&lt;/a&gt;, lots of other gnarly issues are. This library by Tim R. Wood makes working with dates in Javascript a real pleasure. I&amp;#8217;ll take just a moment to show you some of the hurdles we overcame with&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;In our application, like all good developers are storing all dates in &lt;span class="caps"&gt;UTC&lt;/span&gt;. Specifically, we are passing date strings in &lt;span class="caps"&gt;JSON&lt;/span&gt; to a &lt;span class="caps"&gt;PHP&lt;/span&gt; backend that will treat them as &lt;span class="caps"&gt;UTC&lt;/span&gt;. Given that, the backend requires a specific format which is a variation of the typical &lt;span class="caps"&gt;JSON&lt;/span&gt; date time &lt;span class="caps"&gt;ISO&lt;/span&gt; format you&amp;#8217;ve probably seen. All dates should be in the form: &lt;code&gt;2012-10-22 15:36:32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We want to let our users provide us dates in whatever timezone their current browser uses. In our case, we&amp;#8217;re using a jQuery &lt;a href="http://trentrichardson.com/examples/timepicker/"&gt;time picker plugin&lt;/a&gt; by Trent Richardson. When our users are picking dates, we&amp;#8217;re telling the time picker to format them like this: &lt;code&gt;Oct 22, 2012 3:36 pm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Clearly, we&amp;#8217;ll need to translate these times as we move back and forth from the data layer to the presentation layer. To translate the &lt;span class="caps"&gt;UTC&lt;/span&gt; string to user-local time, we simply do this (where &lt;code&gt;post_at&lt;/code&gt; is the string representation of &lt;span class="caps"&gt;UTC&lt;/span&gt; time from the data&amp;nbsp;layer):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;post_at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;&lt;span class="caps"&gt;YYYY&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;&lt;span class="caps"&gt;MM&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;&lt;span class="caps"&gt;DD&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;HH&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&amp;quot; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;&lt;span class="caps"&gt;MMM&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;DD&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;YYYY&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&amp;quot; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, what we&amp;#8217;re doing more specifically is creating a &lt;code&gt;moment&lt;/code&gt; object in &lt;code&gt;utc()&lt;/code&gt; mode. We are passing in the datetime string to parse into a Date() object and the format string of that datetime. We then translate the object to user-local time with &lt;code&gt;local()&lt;/code&gt; and then format into format we like for our time picker&amp;nbsp;plugin.&lt;/p&gt;
&lt;p&gt;Going the other way around, we do the reverse essentially. This time, &lt;code&gt;post_at&lt;/code&gt; is the value from the time picker&amp;#8217;s input text&amp;nbsp;field:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;post_at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;&lt;span class="caps"&gt;MMM&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;DD&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;YYYY&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&amp;quot; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;&lt;span class="caps"&gt;YYYY&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;&lt;span class="caps"&gt;MM&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;&lt;span class="caps"&gt;DD&lt;/span&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;HH&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&amp;quot; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We first create a &lt;code&gt;moment&lt;/code&gt; object in local mode passing it our value and a format string. Switch modes to &lt;code&gt;utc()&lt;/code&gt; and then format for the data&amp;nbsp;layer.&lt;/p&gt;
&lt;p&gt;I originally had about 20 lines of gnarly &lt;code&gt;Date()&lt;/code&gt; object manipulations to do the work of this two lines of code. Plus, I think my original code was&amp;nbsp;wrong.&lt;/p&gt;
&lt;p&gt;moment.js does lots of other nice things as well. Such as the&amp;nbsp;simple:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to the&amp;nbsp;sublime:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;24&lt;span class="p"&gt;,&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;hours&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;humanize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There&amp;#8217;s lots of other great features like relative time&amp;nbsp;output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;2007&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 29&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;fromNow&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="o"&gt;//&lt;/span&gt; 4 &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And for those of you coming from Python who love &lt;code&gt;datediff&lt;/code&gt; objects:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;2007&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 29&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;2007&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 28&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; 86400000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This library has made a difficult problem easy for us to solve. We&amp;#8217;ve been able to do the right thing for our users and for our database&amp;#8217;s sanity. I highly recommend everyone writing javascript applications to give it a&amp;nbsp;look.&lt;/p&gt;</summary><category term="javascript"></category><category term="moment.js"></category><category term="time"></category></entry><entry><title>Failing at Javascript MVC with Ember.js and Backbone.js</title><link href="http://aezell.github.com//2012/10/13/javascript-mvc-ember-backbone/" rel="alternate"></link><updated>2012-10-13T00:00:00-05:00</updated><author><name>Alex Ezell</name></author><id>tag:aezell.github.com,2012-10-13:/2012/10/13/javascript-mvc-ember-backbone/</id><summary type="html">&lt;p&gt;I recently started work on an app using a third-party &lt;span class="caps"&gt;API&lt;/span&gt; that deals with posting to and monitoring social networks. Given that the app was going to be a single-page affair and was strictly only going to be using this third-party &lt;span class="caps"&gt;API&lt;/span&gt;, I thought it would be a good chance to dive into some Javascript &lt;span class="caps"&gt;MVC&lt;/span&gt;&amp;nbsp;frameworks.&lt;/p&gt;
&lt;p&gt;After a quick survey of my coworkers, all of whom are much more adept at Javascript than I, I decided to try Ember.js and Backbone.js. This blog serves to detail what I was trying to do and how much I failed at progress. While, as of this writing, I have a VanillaJS and jQuery based app that does exactly what I need it to do, I think my failures and roadblocks with Ember.js and Backbone.js might be&amp;nbsp;interesting.&lt;/p&gt;
&lt;h2&gt;The&amp;nbsp;Goal&lt;/h2&gt;
&lt;p&gt;Let me set out my goal, so you&amp;#8217;ll have some context to understand better why I did what I did and maybe even be able to see me going wrong as it&amp;nbsp;happens.&lt;/p&gt;
&lt;p&gt;At work, we have a Django app and I was planning on dropping my Javascript &lt;span class="caps"&gt;MVC&lt;/span&gt; app into a content area with the rest of the page around it generated by the Javascript&amp;nbsp;application. &lt;/p&gt;
&lt;p&gt;My primary data source would be the third-party &lt;span class="caps"&gt;API&lt;/span&gt; mentioned above. It&amp;#8217;s a pretty straightforward &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; that speaks &lt;span class="caps"&gt;JSON&lt;/span&gt; and does it in a pretty consistent way. I had already written a Python wrapper around the &lt;span class="caps"&gt;API&lt;/span&gt;, so I knew what to expect with my data access&amp;nbsp;methods.&lt;/p&gt;
&lt;p&gt;The page as concepted was a one-page app with mostly read views and only one action that would actually need to &lt;span class="caps"&gt;POST&lt;/span&gt; to the &lt;span class="caps"&gt;API&lt;/span&gt; and create new&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Seemed really simple. I also have a&amp;nbsp;deadline.&lt;/p&gt;
&lt;h2&gt;The First&amp;nbsp;Problem&lt;/h2&gt;
&lt;p&gt;Given that Ember.js requires Handlebars.js and Backbone.js works really well with it, I had to figure out how to get my Handlebars templates into a Django&amp;nbsp;template.&lt;/p&gt;
&lt;p&gt;I ended up finding &lt;a href="https://gist.github.com/3886746"&gt;this template tag&lt;/a&gt; which let me wrap my Handlebars templates so that Django wouldn&amp;#8217;t try to evaluate anything inside of the&amp;nbsp;tag.&lt;/p&gt;
&lt;p&gt;Problem&amp;nbsp;solved.&lt;/p&gt;
&lt;h2&gt;My Experience with&amp;nbsp;Ember.js&lt;/h2&gt;
&lt;p&gt;Like a good programmer should, I first started by reading &lt;a href="http://emberjs.com/documentation/"&gt;the documentation for Ember.js&lt;/a&gt;. But, like a lot of documentation, it is dense and not terribly good at painting the big&amp;nbsp;picture.&lt;/p&gt;
&lt;p&gt;I was excited to find that they had a &lt;a href="http://emberjs.com/guides/"&gt;guides section&lt;/a&gt; but frustrated that those guides weren&amp;#8217;t exactly of the tutorial&amp;nbsp;type.&lt;/p&gt;
&lt;p&gt;Next, I was pointed to &lt;a href="http://trek.github.com/"&gt;this essay by Trek Glowacki&lt;/a&gt; as a great resource for how to build an Ember.js app. And that it most certainly&amp;nbsp;is. &lt;/p&gt;
&lt;p&gt;However, it&amp;#8217;s a step-by-step guide to build a massive app completely in Ember.js. It does not stop to answer questions about how these new concept might or might not match up with concepts with which the reader may be&amp;nbsp;familiar.&lt;/p&gt;
&lt;p&gt;That is, it&amp;#8217;s a tutorial that requires you to forget everything else you know. This is a great way to truly learn something new, but it&amp;#8217;s not so good for productivity under a&amp;nbsp;deadline.&lt;/p&gt;
&lt;h3&gt;The First&amp;nbsp;Code&lt;/h3&gt;
&lt;p&gt;With the first code I wrote, I attempted to follow Trek&amp;#8217;s guide to the letter. I had outlets and routes and felt good about the structure I was laying out. However, it didn&amp;#8217;t really seem to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jsfiddle.net/veDjq/"&gt;Here&amp;#8217;s a look at what the code basically looked like at this&amp;nbsp;point.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;HTML&lt;/span&gt; that corresponds to the Javascript in the link above is lost in time. However, the issue was that I was having problems with understanding how the outlets connected to the app and the notion that Trek&amp;#8217;s guides seems to assume that the whole page is controlled by the&amp;nbsp;Javascript.&lt;/p&gt;
&lt;p&gt;Additionally, I was having issues with how the callbacks that are happening wouldn&amp;#8217;t be finished in time for the code that needed to use their&amp;nbsp;results. &lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll remember the third-part &lt;span class="caps"&gt;API&lt;/span&gt; I talked about. It requires that a signature string be created and appended to every &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;call. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Signature&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Signature&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reopenClass&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;getSignature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        $&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="n"&gt;async&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/auth/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Turns out, I didn&amp;#8217;t know anything about promises or deferreds. This was one of the great things I learned when I asked &lt;a href="http://stackoverflow.com/questions/12732692/forcing-ember-to-wait-for-value-from-an-ajax-request"&gt;this question on Stack Overflow&lt;/a&gt;. This is clearly not an Ember problem, but it was something great to&amp;nbsp;learn.&lt;/p&gt;
&lt;p&gt;I quickly realized that the outlets and routes wouldn&amp;#8217;t work for me, mostly because it seemed like my simple app didn&amp;#8217;t need them. They were just clouding my already muddled understanding of what I was&amp;nbsp;doing.&lt;/p&gt;
&lt;h3&gt;The Second&amp;nbsp;Code&lt;/h3&gt;
&lt;p&gt;Through some trials and tribulations, I eventually was able to cobble together some code that sort of worked. It seemed like I had a lot of verbose code that didn&amp;#8217;t do much except to get things set&amp;nbsp;up. &lt;/p&gt;
&lt;p&gt;As a heavy jQuery user, I kept thinking to myself that the functionality I had could essentially be done in about half the code if I just used jQuery. Sure, it might not have the structure I was searching for, but the question still&amp;nbsp;nagged.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jsfiddle.net/9aH2q/5/"&gt;This is the code as it stood and was sort of&amp;nbsp;working.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The error that I had with this code was that The PostedPiblications data was always one action behind the PostedPubsCampaign selection. That is, if the app loaded with the data for campaign A, then the user changed the selection to campaign B, nothing would happen. I the user then selected campaign C, the PostedPublications shown on the page would belong to campaign&amp;nbsp;B.&lt;/p&gt;
&lt;p&gt;I could see that the correct &lt;span class="caps"&gt;API&lt;/span&gt; call was being made, but the page wasn&amp;#8217;t updating as expected. After fighting for this for a full day, I posted &lt;a href="http://stackoverflow.com/questions/12785996/updating-ember-view-with-change-in-a-select-view"&gt;this StackOverflow question that remains unanswered&lt;/a&gt; with 40&amp;nbsp;views.&lt;/p&gt;
&lt;p&gt;Despite the fact that I had some code that worked moderately well, I still didn&amp;#8217;t really understand why I needed controllers and views. The models didn&amp;#8217;t seem to quite work the way my conception of models does (based on my experiences with Django and Sqlalchemy&amp;nbsp;models).&lt;/p&gt;
&lt;h3&gt;Getting&amp;nbsp;Help&lt;/h3&gt;
&lt;p&gt;You&amp;#8217;ll notice that I posted a few question on StackOverflow while working through this Ember.js work. I was also in the #emberjs &lt;span class="caps"&gt;IRC&lt;/span&gt; channel often and asking questions in there. Adding to that numerous Google searches and bugging my coworkers and I was quickly exhausting my supply of&amp;nbsp;resources.&lt;/p&gt;
&lt;p&gt;Given the relative newness of Ember.js and the current lack of experienced folks who have built apps with it &lt;span class="caps"&gt;AND&lt;/span&gt; are willing to help in &lt;span class="caps"&gt;IRC&lt;/span&gt;, blog, answer &lt;span class="caps"&gt;SO&lt;/span&gt; questions, etc., it&amp;#8217;s a challenging environment for a newbie. I did just stumble on &lt;a href="http://www.embernoob.com/"&gt;EmberNoob&lt;/a&gt; and that may grow into a nice&amp;nbsp;resource.&lt;/p&gt;
&lt;p&gt;All of this trouble left me frustrated, confused and still staring at a looming&amp;nbsp;deadline.&lt;/p&gt;
&lt;h2&gt;Trying out&amp;nbsp;Backbone.js&lt;/h2&gt;
&lt;p&gt;At this point, one of my coworkers made the point that we were already using &lt;a href="http://backbonejs.org/"&gt;Backbone.js&lt;/a&gt; in many other places in our application. Now that I had a good sense of what I wanted to do in the app, it might be easier to learn Backbone instead of&amp;nbsp;Ember.&lt;/p&gt;
&lt;p&gt;I took essentially a day and ported the code I had over the Backbone.js and ended up with &lt;a href="https://gist.github.com/3886893"&gt;this bit of code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this, I couldn&amp;#8217;t get past the point of a syntax error. JSLint wasn&amp;#8217;t helping and no one in the office could figure it out. It was at this point, with 4 days of Ember experimentation and 1 day of Backbone coding, that my deadline pressure started tickling the back of my brain and I had to move on to technologies I already&amp;nbsp;knew.&lt;/p&gt;
&lt;h2&gt;Temporary&amp;nbsp;Conclusion&lt;/h2&gt;
&lt;p&gt;The tenor of this post might lead you to believe that I don&amp;#8217;t like these two projects and think they aren&amp;#8217;t valuable. Quite the&amp;nbsp;contrary.&lt;/p&gt;
&lt;p&gt;Both of these Javascript &lt;span class="caps"&gt;MVC&lt;/span&gt; frameworks have great promise for me and I intend to find another, perhaps better, situation in which I can learn and use them. I really appreciate the structure and modularity that both projects brought to my&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;I also appreciate that they forced me to think about my Javascript code in ways I previously hadn&amp;#8217;t had to. I like the idea of having the code that gets the data into the &lt;span class="caps"&gt;DOM&lt;/span&gt; be somewhat transparent to the code that pulls that data from its&amp;nbsp;source.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll come back around to both Ember.js and Backbone.js&amp;nbsp;again.&lt;/p&gt;
&lt;h2&gt;Learnings&lt;/h2&gt;
&lt;p&gt;In the course of this work, I learned a good deal about promises and deferreds. Additionally, I was exposed to the beauty that is &lt;a href="http://underscorejs.org/"&gt;Underscore.js&lt;/a&gt; and &lt;a href="http://momentjs.com/"&gt;Moment.js&lt;/a&gt;. That progress alone was worth delving into this&amp;nbsp;stuff.&lt;/p&gt;</summary><category term="javascript"></category><category term="mvc"></category><category term="ember.js"></category><category term="backbone.js"></category></entry><entry><title>Dependence and Independence</title><link href="http://aezell.github.com//2012/10/12/dependence-and-independence/" rel="alternate"></link><updated>2012-10-12T00:00:00-05:00</updated><author><name>Alex Ezell</name></author><id>tag:aezell.github.com,2012-10-12:/2012/10/12/dependence-and-independence/</id><summary type="html">&lt;p&gt;I was talking with some friends about the nature of dependence the other night. I made the comment that there was a point in my life where I probably didn&amp;#8217;t understand what it felt like to be completely dependent on another&amp;nbsp;person/thing/organization/whatever.&lt;/p&gt;
&lt;p&gt;Today, I&amp;#8217;m sitting on my couch as my son is sleeping. He&amp;#8217;s been sick today and is generally just feeling puny. I&amp;#8217;m looking at him now and thinking about this notion of dependence and how he is completely dependent on me. It&amp;#8217;s the basic core responsibility that every parent faces. Yet, to him, it&amp;#8217;s just the way things are. He doesn&amp;#8217;t know that there&amp;#8217;s a way to live where he doesn&amp;#8217;t need to be dependent on&amp;nbsp;anyone.&lt;/p&gt;
&lt;p&gt;That sounds like it should be something to strive for. That we should all strive to be independent. We are often encouraged to be this way in our school years. In fact, our son is at a Montessori school where independent work and thought is highly&amp;nbsp;important.&lt;/p&gt;
&lt;p&gt;Yet, there&amp;#8217;s an aspect of our lives where independence has few, if any, benefits. That&amp;#8217;s in the realm of the spiritual. That is, in the way we deal with other human beings and how we move through the world making contact with other people, it may well prove beneficial to rely on people. If one is so inclined, it may be even more solid to rely on one&amp;#8217;s definition of a higher&amp;nbsp;power.&lt;/p&gt;
&lt;p&gt;My son could almost certainly wake up right now and even though he&amp;#8217;s only 3 years old, go upstairs, wash his face and hands, change clothes, and eat a little something to see if he feels better. That would be a strong, independent series of actions. I would be proud of him for doing all those things without&amp;nbsp;assistance.&lt;/p&gt;
&lt;p&gt;However, when it comes to the times when he&amp;#8217;ll have to face real struggle small or large, like a friend being mean to him or a grandparent passing away, he&amp;#8217;ll need something more than a basic set of instructions or list of tasks. He&amp;#8217;ll need to rely on those around him that love him and if he so chooses in the future, his own definition of a higher&amp;nbsp;power.&lt;/p&gt;
&lt;p&gt;I have found, in a relatively brief period of time, that my own independent spirit has been borne of dependence on close friends and my conception of a higher power. It seems that by shuffling off to those I rely on the small slights and perceived wrongs that the world foists on me each day, I am able to spend time and effort on the deeper, core challenges of being a kind, loving, tolerant person. That&amp;#8217;s got be a good place to spend my&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s not to say that I unload all my crap on others and let them deal with it. It has become the sort of thing that deep friendships do best. I complain or grumble and my friend provides levity and objective perspectives that inevitably allow me to see a clearer path unclouded by my ego and self-serving instincts. In turn, I must do the same for them, or else I&amp;#8217;m simply back to the state I described in the opening. Sure, I&amp;#8217;d be dependent on someone, but if I can&amp;#8217;t be dependable then it all falls&amp;nbsp;down.&lt;/p&gt;
&lt;p&gt;It nearly goes without saying that I am not in this enlightened state all of the time, or even a quarter of the time, but it&amp;#8217;s a state to which I strive and an effort I&amp;nbsp;enjoy.&lt;/p&gt;</summary><category term="kids"></category><category term="responsibility"></category><category term="dependence"></category><category term="spirituality"></category></entry></feed>